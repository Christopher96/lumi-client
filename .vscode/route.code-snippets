{
  // Place your lumi-client workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Create new route": {
    "scope": "javascript,typescript",
    "prefix": "route",
    "body": [
      "import { Route, RouteParamsTypes } from './route';",
      "import { Request, Response } from 'express';",
      "import { ParamsDictionary, Query } from 'express-serve-static-core';",
      "",
      "/**",
      "*/",
      "export class YourRoute extends Route{",
      "\tprotected readonly name='name'",
      "\tprotected readonly shortName='n'",
      "\tprotected readonly description='this is an auto generated desc. Please change me'",
      "\tprotected readonly numberOfArguments=1",
      "\tprotected readonly params = {",
      "\t\targ:{",
      "\t\t\toptional:true,",
      "\t\t\ttype:RouteParamsTypes.NUMBER",
      "\t\t}",
      "\t}",
      "",
      "",
      "\t public async exec(req: Request<ParamsDictionary, any, any, Query>, res: Response): Promise<void> {",
      "\tconst event = this.parseReq<{ arg: string }>(req);",
      "\tconst { args, params } = event;",
      "\tres.send(`You arguments where ${args.join(',')} and your arg params where ${params.arg}`);",
      "\t}",
      "}"
    ],

    "description": "Sets up a new route which be used in the routes folder"
  }
}
